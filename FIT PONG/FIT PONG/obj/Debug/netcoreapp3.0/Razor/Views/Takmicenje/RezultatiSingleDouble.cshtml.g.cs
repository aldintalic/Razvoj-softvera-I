#pragma checksum "C:\Users\talicni\Desktop\SEMINARSKI_RAD_RS_1\webapp\FIT PONG\FIT PONG\Views\Takmicenje\RezultatiSingleDouble.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e00ff3f44af37f66825341386ccf25f5b514d0fe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Takmicenje_RezultatiSingleDouble), @"mvc.1.0.view", @"/Views/Takmicenje/RezultatiSingleDouble.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\talicni\Desktop\SEMINARSKI_RAD_RS_1\webapp\FIT PONG\FIT PONG\Views\_ViewImports.cshtml"
using FIT_PONG;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\talicni\Desktop\SEMINARSKI_RAD_RS_1\webapp\FIT PONG\FIT PONG\Views\_ViewImports.cshtml"
using FIT_PONG.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e00ff3f44af37f66825341386ccf25f5b514d0fe", @"/Views/Takmicenje/RezultatiSingleDouble.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"438b6b2e6f34317388d1a6ef6e05391772603c6e", @"/Views/_ViewImports.cshtml")]
    public class Views_Takmicenje_RezultatiSingleDouble : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\talicni\Desktop\SEMINARSKI_RAD_RS_1\webapp\FIT PONG\FIT PONG\Views\Takmicenje\RezultatiSingleDouble.cshtml"
  
    Layout = null;
    var id = ViewBag.id;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""turnir"">


</div>
<script>
    $(document).ready(function () {
        var autoCompleteData = {
            teams: [], results: []
        };
        $.ajax({
            async: false,
            url: ""https://localhost:44322/FitApi/Get/");
#nullable restore
#line 18 "C:\Users\talicni\Desktop\SEMINARSKI_RAD_RS_1\webapp\FIT PONG\FIT PONG\Views\Takmicenje\RezultatiSingleDouble.cshtml"
                                                Write(id);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            type: ""Get"",
            success: function (data) {
                var x = JSON.parse(data);
                var tempPolovine = (x.length + 1) / 2;
                br = -1;
                for (var i = 0; i < x.length + 1; i++) {
                    if (i < ((x.length + 1) / 2))
                        autoCompleteData.teams.push([x[i].Item1, x[i].Item4]);

                    if (i == 0 || i == temp) {
                        autoCompleteData.results.push([]);
                        temp = (x.length + 1) - (tempPolovine);
                        tempPolovine /= 2;

                        br++;
                    }
                    autoCompleteData.results[br].push([x[i].Item2, x[i].Item3]);

                }

            }
        });
            autoCompleteData.results[br-1].push([2, 0]);
            /* If you call doneCb([value], true), the next edit will be automatically
               activated. This works only in the first round. */
            function ");
            WriteLiteral(@"acEditFn(container, data, doneCb) {
                var input = $('<input type=""text"">');
                input.val(data);
                input.autocomplete({ source: acData });
                input.blur(function () { doneCb(input.val()) });
                input.keyup(function (e) { if ((e.keyCode || e.which) === 13) input.blur() });
                container.html(input);
                input.focus();
            }

            function acRenderFn(container, data, score, state) {
                switch (state) {
                    case 'empty-bye':
                        container.append('BYE');
                        return;
                    case 'empty-tbd':
                        container.append('TBD');
                        return;

                    case 'entry-no-score':
                    case 'entry-default-win':
                    case 'entry-complete':
                        var fields = data;
                        container.append(fields);
              ");
            WriteLiteral(@"          return;
                }
            };

            $(function () {
                var container = $('.turnir')
                container.bracket({
                    init: autoCompleteData,
                    decorator: { edit: acEditFn, render: acRenderFn }
                });
            });


        });



</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
